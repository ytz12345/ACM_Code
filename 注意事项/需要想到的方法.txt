数据结构:
1.能用splay吗？能用线段树代替吗？能用树状数组代替吗？
  能用treap吗？能用set代替吗？
2.势能线段树(先确定势能，然后注意收敛情况不能有遗漏):
  区间开根有次数限制，维护最大值, 直接递归到叶节点
  区间取模，如果x>p，那么x减少至少一半，维护最大值, 递归到叶节点
  区间除，单点加，跟上面一样脑瘫问题
  区间除，区间加，会导致max-min减小

分块方法的应用:
1.图的所有点，按照度数与sqrt(m)的关系分为大点小点
2.区间加单点查，可以做o1修改根号查询，也能根号修改o1查询

分块的实现:
实现上一般不需要block结构体，分块的元素其实还是在同一个数组里的

数论:
欧拉定理:
若a,n互质，则a^phi(n)%n=1%n,费马小定理是n为质数的特例
所以a^i%n的循环节长度也就是phi(n)，在a,n互质的前提下
拓展欧拉定理:
a^x%m=a^(x%phi(m)+phi(m))%m,a为任意整数，x,m为任意正整数，并且x>=phi(m)
威尔逊定理:
(n-2)! % n  n为素数为1，否则n为4是答案为2，其他为0
鸽巢原理:
x^k%p的循环节不会超过p
线性筛欧拉函数:
phi(i*p)=phi(i)*phi(p),p为质数
绝对值相加:
函数y=sum(|x-ai|)一定是个凸的函数，可以三分

计数问题:
计算多种情况的答案之和，转变为枚举某个量，计算这个量对多少种情况做贡献

随机:
随机排列的LIS长度是sqrt(n)
对于验证比较耗时，但是理论上满足条件的比较少的情况
为了防止被构造数据卡掉，可以随机一下(前提是顺序不影响意义)，另外还要注意能去重就去重

判定问题:
随机赋值:某些判定可以考虑随机赋值val,val的运算看情况可以考虑异或or乘法
判定两个数相等的一种思路:取若干个质数，模数都相等就默认两个数相同，要保证质数乘积>MAX_X

快速幂:
快速幂不只有2进制，一般2进制最快
使用k进制快速幂实际复杂度是klog(k,n)
当指数是个很长的数字时，根据给定数字的进制选择快速幂的进制才是缀吼的

经典问题:
最大和子矩阵，如果0很多导致非0只有O(n)级别，可以转成最大子段和O(n^2logn)来做

图论:
1.对于边权为1的图，保证起始点(一开始放入queue的点)dis最小+SLF优化=O(n)复杂度
2.长链剖分解决的问题:满足某条件的树上路径的存在性判定/计数
3.无向图若干询问，每次给两个点uv，求出满足某条件的路径的xx值:
  (1)生成树能不能做
4.判断普通无向图是不是二分图:有没有奇环

树:
1.选择a的子树里距离a不超过k的所有点，dep+dfn转到二维平面
2.选择a的子树里距离a满足特殊限制的一些点->bfs序+Lmost+Rmost，后者可使用树链剖分维护
3.LCT的权在边上->如果可以就把边化成点即可

并查集:
1.维护任意两点距离的奇偶性:
  令d[x]为x到所在根的路径长度的奇偶，新加一条边(x,y)，且xy不在一个集合
  把x的根fx合并到y的根fy下，令new_d[fx] = d[x]^d[y]^1 即可
2.按秩合并并查集的优点:可以借栈来撤销操作
